import numpy as np

# Binomial random variable

# number of trials 
n = 10 
# success probability
p = 0.2 
# generate a binomial random variable
s = np.random.binomial(n, p)

# generate a sequence of binomial random variables
size = 10000
dist = np.random.binomial(n, p, size)

# empirical mean
print(dist.mean())

# theoretical mean
print(n*p)

# empirical standard deviation
print(dist.std())

# theoretical standard deviation
print(np.sqrt(n*p*(1-p)))

# generate a sequence of standard normal random variables
s = np.random.randn(1000)

print(s.mean())
print(s.std())

# generate a sequence of normal random variables
mean = 1
std = 2
s = mean + std * np.random.randn(1000)

print(s.mean())
print(s.std())

# find the z-value for 0.95, 0.975, 0.99
from scipy.stats import norm

z = {}
for i in [0.95, 0.975, 0.99]:
    z[i] = norm.ppf(i)
    print(z[i])

# double check
for i in [0.95, 0.975, 0.99]:
    print(norm.cdf(z[i]))

# find the t-value with degrees of freedom = 20 for 0.95, 0.975, 0.99
from scipy.stats import t

s = {}
dof = 20
for i in [0.95, 0.975, 0.99]:
    s[i] = t.ppf(i,dof)
    print(s[i])

# double check
for i in [0.95, 0.975, 0.99]:
    print(t.cdf(s[i],dof))
